name: Update Documentation

on:
  workflow_dispatch:

jobs:
  update-doc-src:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        repository: 'igor-krechetov/hsmcpp-doc'
        # ref: main
        ref: experiments
        submodules: 'recursive'
    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
        git_config_global: true
        git_user_signingkey: true
        git_commit_gpgsign: true
        workdir: ${{ env.target_dir }}
    - name: Update
      run: |
        git submodule foreach git fetch --all
        git submodule foreach git reset --hard origin/main
        git add ./source/hsmcpp
    - name: Debug1
      run: |
        version=$(git log -1 --pretty=format:"%s" | grep -Po '\[([\d.]+)\]')
        echo "----> '$version'"
    - name: Extract version from head commit
      run: echo "head_version=" "$(git log -1 --pretty=format:"%s" | grep -Po '\[([\d.]+)\]')" >> $GITHUB_ENV
    # - name: Extract version from head commit
    #   run: echo "head_version=" "$(echo ${{ github.event.inputs.name }} | grep -Po '\[([\d.]+)\]')" >> $GITHUB_ENV
    - name: Update documentation
      if: ${{ env.head_version != ' ' }}
      run: |
        echo "Found new hsmcpp version '${{ env.head_version }}'"
        git commit -S -am "[auto] hsmcpp library updated to ${{ env.head_version }}"
        git push
    - name: Skip update
      if: ${{ env.head_version == ' ' }}
      run: echo "SKIP documentation update"
        